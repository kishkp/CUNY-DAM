tmp <- htmlParse(tmp[seq(which(tmp == "")[1] + 1, length(tmp), 1)])
ham_mail <- xpathSApply(tmp, "//text()[not(ancestor::script)] [not(ancestor::style)] [not(ancestor::noscript)] [not(ancestor::form)]", xmlValue)
ham_corpus <- Corpus(VectorSource(ham_mail))
meta(ham_corpus[[1]], "EmailType") <- "Ham"
n <- 1
for(i in 2:length(hams)){
tmp <- readLines(hams[i])
tmp <- htmlParse(tmp[seq(which(tmp == "")[1] + 1, length(tmp), 1)])
ham_mail <- xpathSApply(tmp, "//text()[not(ancestor::script)] [not(ancestor::style)] [not(ancestor::noscript)] [not(ancestor::form)]", xmlValue)
if (length(ham_mail)!=0) {
n <- n + 1
tmp_corpus <- Corpus(VectorSource(ham_mail))
ham_corpus <- c(ham_corpus, tmp_corpus)
meta(ham_corpus[[n]], "EmailType") <- "Ham"
}
}
meta_ham <- meta(ham_corpus, type = "local", tag = "EmailType")
meta_ham
meta_ham[1]
meta_ham[2]
meta_ham[3]
meta_ham[4]
meta_ham[5]
meta_ham[6]
email_corpus <- c(spam_corpus, ham_corpus)
ham_corpus
ham_corpus[1]
email_corpus<- sample(email_corpus, length(email_corpus), length(email_corpus))
meta_EmailType <- meta(email_corpus, type = "local", tag = "EmailType")
meta_EmailType <- meta(email_corpus, type = "local", tag = "EmailType")
meta_data <- data.frame(
EmailType = unlist(meta_EmailType)
)
meta_data
email_corpus <- tm_map(email_corpus, removeWords, words = stopwords("en"))
email_corpus <- tm_map(email_corpus, stemDocument)
email_corpus <- tm_map(email_corpus, PlainTextDocument)
email_corpus
email_corpus[1]
email_corpus <- tm_map(email_corpus, stemDocument)
email_corpus <- tm_map(email_corpus, PlainTextDocument)
tdm <- TermDocumentMatrix(email_corpus)
tdm <- removeSparseTerms(tdm, 1-(10/length(email_corpus)))
dtm <- DocumentTermMatrix(email_corpus)
dtm <- removeSparseTerms(dtm, 1-(10/length(email_corpus)))
EmailType_labels <- unlist(meta(email_corpus, "EmailType"))
EmailType_labels
N <- length(EmailType_labels)
Three_4th <- round(N*0.75,0)
container <- create_container(dtm, labels = EmailType_labels, trainSize = 1:Three_4th, testSize =
Three_4th+1:N, virgin = TRUE)
spam_corpus <- Corpus(VectorSource(spam_mail))
spam_corpus
VectorSource(spam_mail)
a<-VectorSource(spam_mail)
spams <- dir("./emails/spam/", full.names = TRUE)
tmp <- readLines(spams[1])
tmp <- htmlParse(tmp[seq(which(tmp == "")[1] + 1, length(tmp), 1)])
spam_mail <- xpathSApply(tmp, "//text()[not(ancestor::script)] [not(ancestor::style)] [not(ancestor::noscript)] [not(ancestor::form)]", xmlValue)
spam_corpus <- Corpus(VectorSource(spam_mail))
spam_corpus[[1]]
spam_corpus[1]
spam_corpus[[2]]
spam_corpus[[2]][1]
spam_corpus[[2]][2]
spam_corpus[[2]][3]
spam_corpus[[2]][4]
spam_corpus[[2]][5]
spam_corpus[[2]][6]
meta(spam_corpus[[1]], "EmailType") <- "Spam"
library(RCurl)
library(XML)
library(stringr)
library(tm)
library(SnowballC)
library(RTextTools)
# first we parse all the spams and create the email corpus
spams <- dir("./emails/spam/", full.names = TRUE)
tmp <- readLines(spams[1])
tmp <- htmlParse(tmp[seq(which(tmp == "")[1] + 1, length(tmp), 1)])
spam_mail <- xpathSApply(tmp, "//text()[not(ancestor::script)] [not(ancestor::style)] [not(ancestor::noscript)] [not(ancestor::form)]", xmlValue)
spam_corpus <- Corpus(VectorSource(spam_mail))
meta(spam_corpus[[1]], "EmailType") <- "Spam"
meta(spam_corpus[[1]])
library(RCurl)
library(XML)
library(stringr)
library(tm)
library(SnowballC)
library(RTextTools)
# first we parse all the spams and create the email corpus
spams <- dir("./emails/spam/", full.names = TRUE)
tmp <- readLines(spams[1])
tmp <- htmlParse(tmp[seq(which(tmp == "")[1] + 1, length(tmp), 1)])
spam_mail <- xpathSApply(tmp, "//text()[not(ancestor::script)] [not(ancestor::style)] [not(ancestor::noscript)] [not(ancestor::form)]", xmlValue)
spam_corpus <- Corpus(VectorSource(spam_mail))
meta(spam_corpus[[1]], "EmailType") <- "Spam"
n <- 1
for(i in 2:length(spams)){
tmp <- readLines(spams[i])
tmp <- htmlParse(tmp[seq(which(tmp == "")[1] + 1, length(tmp), 1)])
spam_mail <- xpathSApply(tmp, "//text()[not(ancestor::script)] [not(ancestor::style)] [not(ancestor::noscript)] [not(ancestor::form)]", xmlValue)
if (length(spam_mail)!=0) {
n <- n + 1
tmp_corpus <- Corpus(VectorSource(spam_mail))
spam_corpus <- c(spam_corpus, tmp_corpus)
meta(spam_corpus[[n]], "EmailType") <- "Spam"
}
}
meta_spam <- meta(spam_corpus, type = "local", tag = "EmailType")
tmp_corpus[[1]]
tmp_corpus[[1]][1]
unlist(tmp_corpus[[1]])
unlist(tmp_corpus[[2]])
unlist(tmp_corpus[[3]])
unlist(tmp_corpus[[4]])
tmp_corpus[[2]][1]
tmp_corpus[[3]][1]
tmp_corpus[[4]][1]
tmp_corpus[[2]][1]
tmp_corpus[[2]][2]
spam_corpus
meta_data <- prescindMeta(release_corpus, c("organisation",
"publication"))
table(as.character(meta_data[, "EmailType"]))
table(as.character(meta_spam[, "EmailType"]))
table(as.character(meta_spam["EmailType"]))
table(as.character(meta_spam[]))
x<-'Capital Market ReviewKhambatta Securities - SubscribeICICI Direct - SubscribeKRChoksey - SubscribeSPA Research - SubscribeHEM Securities - Neutral
'
x
str_count(x, "Subscribe")
str_count(x, "Avoid")
str_count(x, "Neutral")
IPO_Rating_Details = data.frame()
ipo_details <- paste0('http://www.chittorgarh.com/ipo/ipo_ratings.asp?FormIPORating_Page=', 1)
ipo_table = readHTMLTable(ipo_details, as.data.frame = TRUE)
ipo_data <- data.frame(ipo_table, stringsAsFactors = FALSE)
ipo_data
IPO_Rating_Details <- rbind(IPO_Rating_Details, ipo_data)
IPO_Rating_Details = data.frame()
for (i in 1:20){
ipo_details <- paste0('http://www.chittorgarh.com/ipo/ipo_ratings.asp?FormIPORating_Page=', i)
ipo_table = readHTMLTable(ipo_details, as.data.frame = TRUE)
ipo_data <- data.frame(ipo_table, stringsAsFactors = FALSE)
IPO_Rating_Details <- rbind(IPO_Rating_Details, ipo_data)
Sys.sleep(time=1)
}
IPO_Rating_Details = data.frame()
for (i in 1:20){
ipo_details <- paste0('http://www.chittorgarh.com/ipo/ipo_ratings.asp?FormIPORating_Page=', i)
ipo_table = readHTMLTable(ipo_details, as.data.frame = TRUE)
ipo_data <- data.frame(ipo_table, stringsAsFactors = FALSE)
IPO_Rating_Details <- rbind(IPO_Rating_Details, ipo_data)
Sys.sleep(time=1)
}
View(IPO_Rating_Details)
View(IPO_Rating_Details)
IPO_Rating_Details[1]
IPO_Rating_Details[1] == 'Rating Scale >'
IPO_Rating_Details[1] != 'Rating Scale >'
table(IPO_Rating_Details[1] != 'Rating Scale >')
IPO_Rating_Details<- IPO_Rating_Details[IPO_Rating_Details[1] != 'Rating Scale >']
IPO_Rating_Details
IPO_Rating_Details = data.frame()
for (i in 1:20){
ipo_details <- paste0('http://www.chittorgarh.com/ipo/ipo_ratings.asp?FormIPORating_Page=', i)
ipo_table = readHTMLTable(ipo_details, as.data.frame = TRUE)
ipo_data <- data.frame(ipo_table, stringsAsFactors = FALSE)
IPO_Rating_Details <- rbind(IPO_Rating_Details, ipo_data)
Sys.sleep(time=1)
}
IPO_Rating_Details[IPO_Rating_Details[1] != 'Rating Scale >',]
IPO_Rating_Details[,IPO_Rating_Details[1] != 'Rating Scale >']
IPO_Rating_Details[IPO_Rating_Details[1] != 'Rating Scale >',]
a<-IPO_Rating_Details[IPO_Rating_Details[1] != 'Rating Scale >',]
View(a)
View(a)
IPO_Rating_Details[4]
IPO_Rating_Details[3]
IPO_Rating_Details[4]
View(IPO_Rating_Details)
View(IPO_Rating_Details)
IPO_Rating_Details[4]
str_count(str_to_lower(IPO_Rating_Details[4]), "subscribe")
str_to_lower(IPO_Rating_Details[4])
str_to_lower(IPO_Rating_Details[1,4])
str_to_lower(IPO_Rating_Details[2,4])
str_to_lower(IPO_Rating_Details[,4])
str_count(str_to_lower(IPO_Rating_Details[2,4]), 'subscribe')
str_count(str_to_lower(IPO_Rating_Details[,4]), 'subscribe')
IPO_Rating_Details[2,4]
IPO_Rating_Details[3,4]
str_count(str_to_lower(IPO_Rating_Details[,4]), 'subscribe') + str_count(str_to_lower(IPO_Rating_Details[,4]), 'invest')
str_count(str_to_lower(IPO_Rating_Details[,4]), 'subscribe') + str_count(str_to_lower(IPO_Rating_Details[,4]), 'invest') + str_count(str_to_lower(IPO_Rating_Details[,4]), 'apply')
str_count(str_to_lower(IPO_Rating_Details[,4]), 'apply')
str_count(str_to_lower(IPO_Rating_Details[,4]), 'don.apply')
str_count(str_to_lower(IPO_Rating_Details[,4]), '[don.apply]')
str_count(str_to_lower(IPO_Rating_Details[,4]), 'don+apply')
str_count(str_to_lower(IPO_Rating_Details[,4]), 'don[.]apply')
str_count(str_to_lower(IPO_Rating_Details[,4]), 'don[\.]apply')
str_count(str_to_lower(IPO_Rating_Details[,4]), 'don[:print:]apply')
str_count(str_to_lower(IPO_Rating_Details[197,4]), 'don[:print:]apply')
IPO_Rating_Details[197,4])
IPO_Rating_Details[197,4]
IPO_Rating_Details[197,1]
IPO_Rating_Details[196,1]
IPO_Rating_Details[196,4]
str_count(str_to_lower(IPO_Rating_Details[196,4]), 'don[:print:]apply')
str_count(str_to_lower(IPO_Rating_Details[196,4]), 'don[:print:]+apply')
str_extract_all(str_to_lower(IPO_Rating_Details[196,4]), 'don[:print:]+apply')
IPO_Rating_Details <- IPO_Rating_Details[IPO_Rating_Details[1] != 'Rating Scale >',]
IPO_Rating_Details <- cbind(IPO_Rating_Details, Subscribe=str_count(str_to_lower(IPO_Rating_Details[,4]), 'subscribe') + str_count(str_to_lower(IPO_Rating_Details[,4]), 'invest') + str_count(str_to_lower(IPO_Rating_Details[,4]), 'apply')-str_extract_all(str_to_lower(IPO_Rating_Details[,4]), 'don[:print:]+apply'))
str_count(str_to_lower(IPO_Rating_Details[,4]), 'subscribe') + str_count(str_to_lower(IPO_Rating_Details[,4]), 'invest') + str_count(str_to_lower(IPO_Rating_Details[,4]), 'apply')-str_extract_all(str_to_lower(IPO_Rating_Details[,4]), 'don[:print:]+apply')
str_count(str_to_lower(IPO_Rating_Details[196,4]), 'don[:print:]+apply')
str_extract_all(str_to_lower(IPO_Rating_Details[196,4]), 'don[:print:]+apply')
View(IPO_Rating_Details)
View(IPO_Rating_Details)
IPO_Rating_Details[196,4]
View(IPO_Rating_Details)
View(IPO_Rating_Details)
IPO_Rating_Details[196,4]
IPO_Rating_Details[196,1]
IPO_Rating_Details[197,1]
Subscribe=str_count(str_to_lower(IPO_Rating_Details[,4]), 'subscribe') + str_count(str_to_lower(IPO_Rating_Details[,4]), 'invest') + str_count(str_to_lower(IPO_Rating_Details[,4]), 'apply')-str_count(str_to_lower(IPO_Rating_Details[,4]), 'don[:print:]+apply')
IPO_Rating_Details <- IPO_Rating_Details[IPO_Rating_Details[1] != 'Rating Scale >',]
IPO_Rating_Details <- cbind(IPO_Rating_Details, Subscribe=str_count(str_to_lower(IPO_Rating_Details[,4]), 'subscribe') + str_count(str_to_lower(IPO_Rating_Details[,4]), 'invest') + str_count(str_to_lower(IPO_Rating_Details[,4]), 'apply')-str_count(str_to_lower(IPO_Rating_Details[,4]), 'don[:print:]+apply'))
IPO_Rating_Details <- cbind(IPO_Rating_Details, Avoid=str_count(str_to_lower(IPO_Rating_Details[,4]), 'avoid') + str_count(str_to_lower(IPO_Rating_Details[,4]), 'don[:print:]+apply'))
IPO_Rating_Details <- cbind(IPO_Rating_Details, Neutral=str_count(str_to_lower(IPO_Rating_Details[,4]), 'neutral'))
View(IPO_Rating_Details)
View(IPO_Rating_Details)
write.csv(IPO_Rating_Details, file = "D:/CUNY/Courses/Data Acquisition and Management/FinalProjectData/IPO_Rating_Details.csv")
View(IPO_Rating_Details)
View(IPO_Rating_Details)
IPo_ListingDates = data.frame()
ipo_details <- paste0('http://www.chittorgarh.com/ipo/ipo_perf_tracker.asp?FormIPOPT_Page=', 2)
ipo_table = readHTMLTable(ipo_details, as.data.frame = TRUE)
ipo_table
i=1
url <- paste0('http://www.chittorgarh.com/ipo/ipo_perf_tracker.asp?FormIPOPT_Page=', i)
IssuerCompany <- url %>%
read_html() %>%
html_nodes(xpath = "/html/body/div[3]/div/div[1]/div/div[3]/table/tbody[1]/tr[1]") %>%
html_children()  %>%
html_text()
IssuerCompany
IssuerCompany <- url %>%
read_html() %>%
html_nodes(xpath = "/html/body/div[3]/div/div[1]/div/div[3]/table/tbody[1]/tr") %>%
html_children()  %>%
html_text()
IssuerCompany
IssuerCompany <- url %>%
read_html() %>%
html_nodes(xpath = "/html/body/div[3]/div/div[1]/div/div[3]/table/tbody[1]/tr/td/a/div/div") %>%
html_children()  %>%
html_text()
IssuerCompany
IssuerCompany <- url %>%
read_html() %>%
html_nodes(xpath = "/html/body/div[3]/div/div[1]/div/div[3]/table//a/div/div") %>%
html_children()  %>%
html_text()
IssuerCompany
IssuerCompany <- url %>%
read_html() %>%
html_nodes(xpath = ".text_wrapper") %>%
html_children()  %>%
html_text()
IssuerCompany <- url %>%
read_html() %>%
html_nodes(xpath = "//*[contains(concat( " ", @class, " " ), concat( " ", "text_wrapper", " " ))]") %>%
html_children()  %>%
html_text()
parse_text <- url %>%
read_html() %>%
xml_nodes(xpath = '//*[contains(concat( " ", @class, " " ), concat( " ", "text_wrapper", " " ))]') %>%
xml_text()
parse_text
parse_text <- url %>%
read_html() %>%
xml_nodes(xpath = '/html/body/div[3]/div/div[1]/div/div[3]/table/tbody/tr/td/a/div/div') %>%
xml_text()
parse_text
ListingDate <- url %>%
read_html() %>%
xml_nodes(xpath = '/html/body/div[3]/div/div[1]/div/div[3]/table/tbody/tr/td') %>%
xml_text()
ListingDate
ListingDate <- url %>%
read_html() %>%
xml_nodes(xpath = '/html/body/div[3]/div/div[1]/div/div[3]/table/tbody/tr/td[2]') %>%
xml_text()
ListingDate
library(rvest)
library(XML)
library(RMySQL)
library(stringr)
# IPO Issue Details
IPO_Issue_Details = data.frame()
for (i in 2007:2016){
ipo_details <- paste0('http://www.chittorgarh.com/ipo/reports/ipo_report_yearly_ipo_list.asp?y=', i)
ipo_table = readHTMLTable(ipo_details, as.data.frame = TRUE)
ipo_data <- data.frame(ipo_table, stringsAsFactors = FALSE)
IPO_Issue_Details <- rbind(IPO_Issue_Details, cbind(IPOYear=i, ipo_data))
Sys.sleep(time=1)
}
names(IPO_Issue_Details) <- c("IssuerCompany", "IssueOpen", "IssueClose", "IssuePrice", "IssueType", "Issue_Size")
write.csv(IPO_Issue_Details, file = "D:/CUNY/Courses/Data Acquisition and Management/FinalProjectData/IPO_Issue_Details.csv")
# Over subscription vs listing gain
IPo_OverSub_ListingGains = data.frame()
for (i in 1:13){
ipo_details <- paste0('http://www.chittorgarh.com/ipo/reports/ipo_report_listing_day_gain.asp?FormIPO_Page=', i)
ipo_table = readHTMLTable(ipo_details, as.data.frame = TRUE)
ipo_data <- data.frame(ipo_table, stringsAsFactors = FALSE)
IPo_OverSub_ListingGains <- rbind(IPo_OverSub_ListingGains, ipo_data)
Sys.sleep(time=1)
}
names(IPo_OverSub_ListingGains) <- c('IssuerCompany', 'IssuePrice', 'Issue_Size', 'QIB', 'NII', 'RII', 'EMP', 'Total', 'Open.Price', 'Low.Price', 'High.Price', 'Close.Price', 'ListingGains')
write.csv(IPo_OverSub_ListingGains, file = "D:/CUNY/Courses/Data Acquisition and Management/FinalProjectData/IPo_OverSub_ListingGains.csv")
# IPO Listing Dates
IPo_ListingDates = data.frame()
for (i in 1:19){
url <- paste0('http://www.chittorgarh.com/ipo/ipo_perf_tracker.asp?FormIPOPT_Page=', i)
IssuerCompany <- url %>%
read_html() %>%
xml_nodes(xpath = '/html/body/div[3]/div/div[1]/div/div[3]/table/tbody/tr/td/a/div/div') %>%
xml_text()
ListingDate <- url %>%
read_html() %>%
xml_nodes(xpath = '/html/body/div[3]/div/div[1]/div/div[3]/table/tbody/tr/td[2]') %>%
xml_text()
IssuerCompany <- as.data.frame(IssuerCompany, stringsAsFactors = FALSE)
ListingDate <- as.data.frame(ListingDate, stringsAsFactors = FALSE)
IPo_ListingDates <- rbind(IPo_ListingDates, cbind(IssuerCompany, ListingDate))
}
names(IPo_ListingDates) <- c('IssuerCompany', 'ListingDate')
write.csv(IPo_ListingDates, file = "D:/CUNY/Courses/Data Acquisition and Management/FinalProjectData/IPo_ListingDates.csv")
# IPO Rating
IPO_Rating_Details = data.frame()
for (i in 1:20){
ipo_details <- paste0('http://www.chittorgarh.com/ipo/ipo_ratings.asp?FormIPORating_Page=', i)
ipo_table = readHTMLTable(ipo_details, as.data.frame = TRUE)
ipo_data <- data.frame(ipo_table, stringsAsFactors = FALSE)
IPO_Rating_Details <- rbind(IPO_Rating_Details, ipo_data)
Sys.sleep(time=1)
}
IPO_Rating_Details <- IPO_Rating_Details[IPO_Rating_Details[1] != 'Rating Scale >',]
IPO_Rating_Details <- cbind(IPO_Rating_Details, Subscribe=str_count(str_to_lower(IPO_Rating_Details[,4]), 'subscribe') + str_count(str_to_lower(IPO_Rating_Details[,4]), 'invest') + str_count(str_to_lower(IPO_Rating_Details[,4]), 'apply')-str_count(str_to_lower(IPO_Rating_Details[,4]), 'don[:print:]+apply'))
IPO_Rating_Details <- cbind(IPO_Rating_Details, Avoid=str_count(str_to_lower(IPO_Rating_Details[,4]), 'avoid') + str_count(str_to_lower(IPO_Rating_Details[,4]), 'don[:print:]+apply'))
IPO_Rating_Details <- cbind(IPO_Rating_Details, Neutral=str_count(str_to_lower(IPO_Rating_Details[,4]), 'neutral'))
names(IPO_Rating_Details) <- c('IssuerCompany', 'OfficialRating', 'CapitalMarketRating', 'IPO_Advice', 'Subscribe', 'Avoid', 'Neutral')
write.csv(IPO_Rating_Details, file = "D:/CUNY/Courses/Data Acquisition and Management/FinalProjectData/IPO_Rating_Details.csv")
# Company  Sectors
# FirstExtract all Sectors
company_sectors = data.frame(stringsAsFactors = FALSE)
url <- 'http://bullseye.in.com/stocks/marketstats/indcomp.php?optex=BSE'
sector_urls <- url %>%
read_html() %>%
html_nodes(xpath = "/html/body/center[2]/div[1]/div[1]/div[7]/div[4]/div[1]/div[2]/ul")%>%
html_children() %>%
html_text()
# Next extract company in each sector
for(i in 2:length(sector_urls)){
# Extract objective of IPO from each link
url <- paste0('http://bullseye.in.com/stocks/marketstats/indcomp.php?optex=BSE&indcode=',curlEscape(sector_urls[i]))
parse_text <- url %>%
read_html() %>%
xml_nodes(xpath = "//td//b") %>%
xml_text()
if(length(parse_text)>0){
parse_text <- as.data.frame(parse_text, stringsAsFactors = FALSE)
company_sectors <- rbind(company_sectors, cbind(sector_urls[i], parse_text))
Sys.sleep(time=1)
message("Done Page No:", url, " Contains companies: ", nrow(parse_text))
}
}
names(company_sectors) <- c('Sectors', 'IssuerCompany')
write.csv(company_sectors, file = "D:/CUNY/Courses/Data Acquisition and Management/FinalProjectData/company_sectors.csv")
# Registrar
proj_user <- "sql5118904"
proj_pwd  <- "wUQcwMzwUl"
proj_db   <- "sql5118904"
proj_host <- "sql5.freemysqlhosting.net"
mydb = dbConnect(MySQL(), user=proj_user, password=proj_pwd, dbname=proj_db, host=proj_host)
Registrars = dbGetQuery(conn = mydb, statement = "Select * from Registrars")
Registrar_IPO_List = data.frame()
for (i in 1:nrow(Registrars[1])){
url <- paste0('http://www.chittorgarh.com/ipo/reports/ipo_list_by_issue_registrar.asp?&a=', Registrars[i,1])
Num_pages <- url %>%
read_html() %>%
xml_nodes(xpath = "/html/body/div[3]/div/div[1]/div/div[2]/p[6]/text()[1]") %>%
xml_text() %>%
str_extract_all("[0-9]+") %>%
as.integer()
Registrar_table = readHTMLTable(url, as.data.frame = TRUE)
registrar_data <- data.frame(Registrar_table, stringsAsFactors = FALSE)
Registrar_IPO_List <- rbind(Registrar_IPO_List, cbind(RegistrarName=Registrars[i, 2], registrar_data))
Sys.sleep(time=1)
for (j in 2:ceiling(Num_pages/50)){
url <- paste0('http://www.chittorgarh.com/ipo/reports/ipo_list_by_issue_registrar.asp?&a=', Registrars[i,1],'&FormIPO_Page=', j )
Registrar_table = readHTMLTable(url, as.data.frame = TRUE)
registrar_data <- data.frame(Registrar_table, stringsAsFactors = FALSE)
Registrar_IPO_List <- rbind(Registrar_IPO_List, cbind(RegistrarName=Registrars[i, 2], registrar_data))
Sys.sleep(time=1)
}
}
dbDisconnect(mydb)
names(Registrar_IPO_List) <- c('RegistrarName', 'IssuerCompany', 'IssueOpen', 'IssueClose', 'IssuePrice', 'Issue_Size')
write.csv(Registrar_IPO_List, file = "D:/CUNY/Courses/Data Acquisition and Management/FinalProjectData/Registrar_IPO_List.csv")
# Lead Manager
mydb = dbConnect(MySQL(), user=proj_user, password=proj_pwd, dbname=proj_db, host=proj_host)
LeadManagers = dbGetQuery(conn = mydb, statement = "Select * from LeadManagers")
LeadManager_IPO_List = data.frame()
for (i in 1:nrow(LeadManagers[1])){
url <- paste0('http://www.chittorgarh.com/ipo/reports/lead_manager_vs_listing_gain.asp?a=', LeadManagers[i,1])
Num_pages <- url %>%
read_html() %>%
xml_nodes(xpath = "/html/body/div[3]/div[1]/div[2]/p[4]/text()[1]") %>%
xml_text() %>%
str_extract_all("[0-9]+") %>%
as.integer()
if(is.na(Num_pages)== FALSE){
LeadManager_table = readHTMLTable(url, as.data.frame = TRUE)
LeadManager_data <- data.frame(LeadManager_table, stringsAsFactors = FALSE)
LeadManager_IPO_List <- rbind(LeadManager_IPO_List, cbind(LeadManagerName=LeadManagers[i, 2], LeadManager_data))
Sys.sleep(time=1)
for (j in 2:ceiling(Num_pages/50)){
url <- paste0('http://www.chittorgarh.com/ipo/reports/lead_manager_vs_listing_gain.asp?a=', LeadManagers[i,1],'&FormIPO_Page=', j )
LeadManager_table = readHTMLTable(url, as.data.frame = TRUE)
LeadManager_data <- data.frame(LeadManager_table, stringsAsFactors = FALSE)
LeadManager_IPO_List <- rbind(LeadManager_IPO_List, cbind(LeadManagerName=LeadManagers[i, 2], LeadManager_data))
Sys.sleep(time=1)
}
}
}
dbDisconnect(mydb)
names(LeadManager_IPO_List) <- c('LMName', 'IssuerCompany', 'Issue_Size', 'Over.subscription..Total.', 'IssuePrice', 'ListingGains')
write.csv(LeadManager_IPO_List, file = "D:/CUNY/Courses/Data Acquisition and Management/FinalProjectData/LeadManager_IPO_List.csv")
company_sectors = data.frame(stringsAsFactors = FALSE)
url <- 'http://bullseye.in.com/stocks/marketstats/indcomp.php?optex=BSE'
sector_urls <- url %>%
read_html() %>%
html_nodes(xpath = "/html/body/center[2]/div[1]/div[1]/div[7]/div[4]/div[1]/div[2]/ul")%>%
html_children() %>%
html_text()
write.csv(sector_urls, file = "D:/CUNY/Courses/Data Acquisition and Management/FinalProjectData/sector_urls.csv")
mydb = dbConnect(MySQL(), user=proj_user, password=proj_pwd, dbname=proj_db, host=proj_host)
Registrars = dbGetQuery(conn = mydb, statement = "Select * from Registrars")
Registrar_IPO_List = data.frame()
write.csv(Registrar_IPO_List, file = "D:/CUNY/Courses/Data Acquisition and Management/FinalProjectData/Registrar_IPO_List.csv")
write.csv(Registrars, file = "D:/CUNY/Courses/Data Acquisition and Management/FinalProjectData/Registrars.csv")
mydb = dbConnect(MySQL(), user=proj_user, password=proj_pwd, dbname=proj_db, host=proj_host)
LeadManagers = dbGetQuery(conn = mydb, statement = "Select * from LeadManagers")
write.csv(LeadManagers, file = "D:/CUNY/Courses/Data Acquisition and Management/FinalProjectData/LeadManagers.csv")
IPo_OverSub_ListingGains = data.frame()
for (i in 1:13){
ipo_details <- paste0('http://www.chittorgarh.com/ipo/reports/ipo_report_listing_day_gain.asp?FormIPO_Page=', i)
ipo_table = readHTMLTable(ipo_details, as.data.frame = TRUE)
ipo_data <- data.frame(ipo_table, stringsAsFactors = FALSE)
IPo_OverSub_ListingGains <- rbind(IPo_OverSub_ListingGains, ipo_data)
Sys.sleep(time=1)
}
names(IPo_OverSub_ListingGains) <- c('IssuerCompany', 'IssuePrice', 'IssueSize', 'QIB', 'NII', 'RII', 'EMP', 'Total', 'OpenPrice', 'LowPrice', 'HighPrice', 'ClosePrice', 'ListingGains')
summary(IPo_OverSub_ListingGains)
str(IPo_OverSub_ListingGains$ListingGains)
summary(IPo_OverSub_ListingGains$ListingGains)
IPo_OverSub_ListingGains = data.frame(stringsAsFactors = FALSE)
for (i in 1:13){
ipo_details <- paste0('http://www.chittorgarh.com/ipo/reports/ipo_report_listing_day_gain.asp?FormIPO_Page=', i)
ipo_table = readHTMLTable(ipo_details, as.data.frame = TRUE)
ipo_data <- data.frame(ipo_table, stringsAsFactors = FALSE)
IPo_OverSub_ListingGains <- rbind(IPo_OverSub_ListingGains, ipo_data)
Sys.sleep(time=1)
}
names(IPo_OverSub_ListingGains) <- c('IssuerCompany', 'IssuePrice', 'IssueSize', 'QIB', 'NII', 'RII', 'EMP', 'Total', 'OpenPrice', 'LowPrice', 'HighPrice', 'ClosePrice', 'ListingGains')
View(IPo_OverSub_ListingGains)
View(IPo_OverSub_ListingGains)
summary(IPo_OverSub_ListingGains$ListingGains)
summary(IPo_OverSub_ListingGains)
class(IPo_OverSub_ListingGains$ListingGains)
ipo_table
ipo_data <- data.frame(ipo_table, stringsAsFactors = FALSE)
View(ipo_data)
View(ipo_data)
str(ipo_details)
str(ipo_data)
ipo_data <- as.data.frame(ipo_table, stringsAsFactors = FALSE)
View(ipo_data)
View(ipo_data)
str(ipo_data)
class(ipo_data$IPO.Over.subscription.Vs.Listing.Gain.at.BSE.Issue.Price)
ipo_data <- as.data.frame(ipo_table)
class(ipo_data$IPO.Over.subscription.Vs.Listing.Gain.at.BSE.Issue.Price)
str(ipo_data)
ipo_data
str(ipo_data)
ipo_details <- paste0('http://www.chittorgarh.com/ipo/reports/ipo_report_listing_day_gain.asp?FormIPO_Page=', i)
ipo_table = readHTMLTable(ipo_details, colClasses = c('character', 'numeric', 'numeric', 'numeric', 'numeric', 'numeric', 'numeric', 'numeric', 'numeric', 'numeric', 'numeric', 'numeric', 'numeric'), stringsAsFactors = FALSE, as.data.frame=TRUE)
ipo_table = readHTMLTable(ipo_details, colClasses = c('character', 'numeric', 'numeric', 'numeric', 'numeric', 'numeric', 'numeric', 'numeric', 'numeric', 'numeric', 'numeric', 'numeric', 'numeric'), stringsAsFactors = FALSE, as.data.frame=TRUE, trim = TRUE)
ipo_data <- as.data.frame(ipo_table)
View(ipo_data)
View(ipo_data)
str(ipo_data)
IPo_OverSub_ListingGains = data.frame(stringsAsFactors = FALSE)
for (i in 1:13){
ipo_details <- paste0('http://www.chittorgarh.com/ipo/reports/ipo_report_listing_day_gain.asp?FormIPO_Page=', i)
ipo_table = readHTMLTable(ipo_details, colClasses = c('character', 'numeric', 'numeric', 'numeric', 'numeric', 'numeric', 'numeric', 'numeric', 'numeric', 'numeric', 'numeric', 'numeric', 'numeric'), stringsAsFactors = FALSE, as.data.frame=TRUE, trim = TRUE)
ipo_data <- as.data.frame(ipo_table)
IPo_OverSub_ListingGains <- rbind(IPo_OverSub_ListingGains, ipo_data)
Sys.sleep(time=1)
}
